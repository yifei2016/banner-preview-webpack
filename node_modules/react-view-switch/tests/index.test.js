import React from 'react';
import { mount } from 'enzyme';
import { Switch, View } from '../source';

describe('Switch', () => {
  it('shouldn\'t render anything if props current is not provided or unknown and placeholder is ' +
    'undefined', () => {
    const Component = () => <div />;
    const wrapperWithoutId = mount(
      <Switch>
        <View viewId="one">
          <Component />
        </View>
      </Switch>
    );

    const wrapperWithId = mount(
      <Switch>
        <View viewId="one">
          <Component />
        </View>
      </Switch>
    );

    expect(wrapperWithoutId.find(Component)).toHaveLength(0);
    expect(wrapperWithId.find(Component)).toHaveLength(0);
  });

  it('should render view with provided id', () => {
    const ComponentOne = () => <div />;
    const ComponentTwo = () => <div />;
    const wrapper = mount(
      <Switch current="one">
        <View viewId="one">
          <ComponentOne />
        </View>
        <View viewId="two">
          <ComponentTwo />
        </View>
      </Switch>
    );

    expect(wrapper.find(ComponentOne).length).toEqual(1);
    expect(wrapper.find(ComponentTwo).length).toEqual(0);
  });

  it('should render default component if it fails to find view with specified id', () => {
    const ComponentOne = () => <div />;
    const ComponentTwo = () => <div />;
    const PlaceHolderComponent = () => <span>placeholder</span>;
    const wrapper = mount(
      <Switch current="three" placeholder={PlaceHolderComponent}>
        <View viewId="one">
          <ComponentOne />
        </View>
        <View viewId="two">
          <ComponentTwo />
        </View>
      </Switch>
    );

    expect(wrapper.find(PlaceHolderComponent).length).toEqual(1);
  });
});
